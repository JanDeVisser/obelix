/*
 * share/__init__.obl - Copyright (c) 2015-2022 Jan de Visser <jan@finiandarcy.com>
 *
 * This file is part of obelix.
 *
 * Obelix is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Obelix is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with obelix.  If not, see <http://www.gnu.org/licenses/>.
 */

intrinsic allocate(size: int) : ptr<char>;

intrinsic eputs(s: string) : u64;
intrinsic fputs(fd: s32, s: string) : u64;
intrinsic putchar(c: u32) : u64;

intrinsic int_to_string(i: s32) : string;

intrinsic add_int_int(i1: s32, i2: s32) : string;

func fsize(fd: s32) : u64 -> "fsize";
func memset(buffer: ptr<char>, ch : u32, len: u32) : ptr<char> -> "memset";
func memcpy(dst: ptr<char>, src: ptr<char>, len: u32) : ptr<char> -> "memcpy";
func open(path: string, flags: u32) : s32 -> "open";
func puti(i: s64) : int -> "putint";
func putu(i: u64) : int -> "putint";
func puthex(i: u64) : int -> "puthex";
func read(fd: s32, buffer: ptr<char>, number_of_bytes: u64) : u64 -> "read";
func putln(s: string) : u64 -> "putln";
func puts(s: string) : u64 -> "puts";
func write(fd: int, buffer: ptr<char>, number_of_bytes: u64) : u64 -> "write";
func cstr_to_str(s: ptr<char>) : string -> "cstr_to_str";

func cstrlen(s: ptr<char>) : u64 -> "cstrlen";
func cputs(s: ptr<char>) : u64 -> "cputs";
func cputln(s: ptr<char>) : u64 -> "cputln";

const O_RDONLY: u32 = 0x0000u32;
const O_RDWR: u32 = 0x0002u32;
const O_WRONLY: u32 = 0x0001u32;
