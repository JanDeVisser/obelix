/*
 * Copyright (c) 2021, Jan de Visser <jan@finiandarcy.com>
 *
 * SPDX-License-Identifier: MIT
 */

intrinsic allocate(size: int) : ptr<char>
intrinsic free(size: int) : void
intrinsic exit(code: s32) : void
intrinsic ok(c: conditional<any, any>) : bool
intrinsic error(c: conditional<any, any>) : bool

intrinsic putchar(c: u32) : u64

intrinsic int_to_string(i: s32) : string

intrinsic add_int_int(i1: s32, i2: s32) : string

func length(s: string) : u32 -> "str_length"



func fsize(fd: s32) : s64 -> "fsize"
func memset(buffer: ptr<char>, ch : u32, len: u32) : ptr<char> -> "memset"
func memcpy(dst: ptr<char>, src: ptr<char>, len: u32) : ptr<char> -> "memcpy"
func puti(i: s64) : int -> "putint"
func putu(i: u64) : int -> "putint"
func puthex(i: u64) : int -> "puthex"
func putln() : u64 -> "putln_"
func putln(s: string) : u64 -> "putln"
func putln(i: u64) : u64 -> "putln_u"
func putln(i: s64) : u64 -> "putln_s"
func puts(s: string) : u64 -> "obl_puts"
func eputs(s: string) : u64 -> "obl_eputs"
func fputs(fd: s32, s: string) : u64 -> "obl_fputs"
func cstr_to_string(s: ptr<char>) : string -> "cstr_to_string"

func cstrlen(s: ptr<char>) : u64 -> "strlen"
func cputs(s: ptr<char>) : u64 -> "cputs"
func cputln(s: ptr<char>) : u64 -> "cputln"
