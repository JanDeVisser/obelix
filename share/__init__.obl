/*
 * share/__init__.obl - Copyright (c) 2015-2022 Jan de Visser <jan@finiandarcy.com>
 *
 * This file is part of obelix.
 *
 * Obelix is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Obelix is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with obelix.  If not, see <http://www.gnu.org/licenses/>.
 */

intrinsic allocate(size: int) : ptr;
intrinsic exit(code: int) : int;

intrinsic close(fd: int) : int;
intrinsic eputs(s: string) : int;
intrinsic fputs(fd: int, s: string) : int;
intrinsic fsize(fd: int) : int;
intrinsic open(path: string, flags: int) : int;
intrinsic putchar(c: int) : int;
intrinsic puts(s: string) : int;
intrinsic read(fd: int, buffer: ptr, number_of_bytes: int) : int;
intrinsic write(fd: int, buffer: ptr, number_of_bytes: int) : int;

intrinsic to_string(i: int) : string;

func memset(buffer: ptr, ch : int, len: int) : ptr -> "memset";
func memcpy(dst: ptr, src: ptr, len: int) : ptr -> "memcpy";
func putint(i: int) : int -> "putint";
func puthex(i: int) : int -> "puthex";
