%
name: simple_expr
prefix: script_parse_
init: init
ignore_ws: true
hashpling: true
%

program                     := statements 
                             ;

statements                  := statement
                               statements 
                             | 
                             ;

statement                   := conditional
                             | while_loop
                             | for_loop
                             | func_def
                             | return_stmt
                             | identifier
                               assignment_or_call
                             ;

conditional                 := "if"
                               expr
                               "then"         [ done: emit_test       ]
                               statements
                               else_clause
                               end_stmt       [ done: emit_end        ]
                             ;

else_clause                 := "else"         [ done: emit_else       ]
                               statements
                             |
                             ;
                             
end_stmt                    := "end"
                             ;

while_loop                  := "while"        [ done: push_label      ]
                               expr           [ done: emit_test       ]
                               statements
                               end_stmt       [ done: emit_end_while  ]
                             ;

for_loop                    := "for"
                               'i'
                               "in"
                               expr
                               statements
                               end_stmt
                             ;
                             
func_def                    := "func"
                               'i'            [ done: push_last_token  ]
                               (              [ done: init_param_count ]
                               parlist
                               )              [ done: start_function   ]
                               statements
                               end_stmt       [ done: end_function     ]
                             ;
                             
parlist                     := param
                               parlist_tail
                             |
                             ;

param                       := 'i'            [ done: push_param     ] 
                             ;

parlist_tail                := ,
                               parlist
                             |
                             ;

return_stmt                 := "return"
                               expr 
                             ;

assignment_or_call          := assignment
                             | func_call       [ done: emit_pop       ]
                             ;

assignment                  := =
                               expr            [ done: emit_assign     ]
                             ;

expr                        := predicate
                               predicatetail
                             ;
                         
predicatetail               := logic_op        [ done: push_last_token ]
                               predicate       [ done: emit_mathop     ]
                             |
                             ;
                               
predicate                   := term
                               termtail
                             ;

termtail                    := add_op          [ done: push_last_token ]
                               term            [ done: emit_mathop     ]
                               termtail
                             | 
                             ;

term                        := factor factortail 
                             ;

factortail                  := mult_op         [ done: push_last_token ]
                               factor          [ done: emit_mathop     ]
                               factortail
                             | 
                             ;

factor                      := ( expr )
                             | identifier  [ done: emit_pushvar   ]
                             | constant    [ done: emit_pushval   ]  
                             ;

identifier                  := 'i'         [ init_push_identifier ]
			       identifier_tail

identifier_tail             := '.'
                               'i'         [ push_identifier_comp ]
                             |
                             ;
                             
constant                    := '"'
                             | '\''
                             | 'd'
                             | 'f'
                             | 'x'
                             ;

logic_op                    := > | ">=" | < | "<=" | "==" | "!=" ;
                             
add_op                      := + | - ;

mult_op                     := * | / | ^ | % ;

func_call                   := (           [ done: init_param_count ]
                               arglist
                               )           [ done: emit_func_call  ]
                             ;

arglist                     := argument
                               arglist_tail
                             ;

argument                    := expr        [ done: param_count     ] 
                             ;

arglist_tail                := ,
                               arglist
                             |
                             ;
 
